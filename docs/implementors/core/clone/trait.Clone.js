(function() {var implementors = {};
implementors["glean"] = [{"text":"impl Clone for BooleanMetric","synthetic":false,"types":[]},{"text":"impl Clone for CounterMetric","synthetic":false,"types":[]},{"text":"impl Clone for CustomDistributionMetric","synthetic":false,"types":[]},{"text":"impl Clone for DatetimeMetric","synthetic":false,"types":[]},{"text":"impl Clone for DenominatorMetric","synthetic":false,"types":[]},{"text":"impl&lt;K:&nbsp;Clone&gt; Clone for EventMetric&lt;K&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone + AllowLabeled&gt; Clone for LabeledMetric&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Inner: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for MemoryDistributionMetric","synthetic":false,"types":[]},{"text":"impl Clone for NumeratorMetric","synthetic":false,"types":[]},{"text":"impl Clone for PingType","synthetic":false,"types":[]},{"text":"impl Clone for QuantityMetric","synthetic":false,"types":[]},{"text":"impl Clone for RateMetric","synthetic":false,"types":[]},{"text":"impl Clone for RecordedExperimentData","synthetic":false,"types":[]},{"text":"impl Clone for StringMetric","synthetic":false,"types":[]},{"text":"impl Clone for StringListMetric","synthetic":false,"types":[]},{"text":"impl Clone for TimespanMetric","synthetic":false,"types":[]},{"text":"impl Clone for TimingDistributionMetric","synthetic":false,"types":[]},{"text":"impl Clone for UuidMetric","synthetic":false,"types":[]}];
implementors["glean_core"] = [{"text":"impl Clone for Lifetime","synthetic":false,"types":[]},{"text":"impl Clone for CommonMetricData","synthetic":false,"types":[]},{"text":"impl Clone for RecordedEvent","synthetic":false,"types":[]},{"text":"impl Clone for HistogramType","synthetic":false,"types":[]},{"text":"impl Clone for BooleanMetric","synthetic":false,"types":[]},{"text":"impl Clone for CounterMetric","synthetic":false,"types":[]},{"text":"impl Clone for DenominatorMetric","synthetic":false,"types":[]},{"text":"impl Clone for EventMetric","synthetic":false,"types":[]},{"text":"impl Clone for JweMetric","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for LabeledMetric&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for MemoryUnit","synthetic":false,"types":[]},{"text":"impl Clone for PingType","synthetic":false,"types":[]},{"text":"impl Clone for QuantityMetric","synthetic":false,"types":[]},{"text":"impl Clone for RateMetric","synthetic":false,"types":[]},{"text":"impl Clone for StringMetric","synthetic":false,"types":[]},{"text":"impl Clone for StringListMetric","synthetic":false,"types":[]},{"text":"impl Clone for TimeUnit","synthetic":false,"types":[]},{"text":"impl Clone for UuidMetric","synthetic":false,"types":[]},{"text":"impl Clone for Metric","synthetic":false,"types":[]},{"text":"impl Clone for NoExtraKeys","synthetic":false,"types":[]},{"text":"impl Clone for PingRequest","synthetic":false,"types":[]},{"text":"impl Clone for Configuration","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()